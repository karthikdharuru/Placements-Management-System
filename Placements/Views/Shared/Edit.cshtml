@model Placements_Model.Models.Student

@{
    ViewBag.Title = "Student Details";
}
<link href="@Url.Content("~/Content/Index.css")" rel="stylesheet" type="text/css" />

@Styles.Render("~/Content/css")

<script src="~/Scripts/Placements.js" type="text/javascript"></script>
<body class="edit-body">
    @if (TempData.ContainsKey(User.Identity.Name) && TempData[User.Identity.Name].ToString()== "Your Details Are Updated")
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <strong>Success!</strong> @TempData[User.Identity.Name]
        </div>
    }
    @if (TempData.ContainsKey(User.Identity.Name) && TempData[User.Identity.Name].ToString() == "Your Details Are Rejected")
    {
        <div class="alert alert-danger alert-dismissible">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <strong>Failure!</strong> @TempData[User.Identity.Name]
        </div>
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="addstudent-form container" onchange="enablebtn()">
            <div class="form-horizontal row">

                <center><h4>@ViewBag.tittle</h4></center>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StudentId, new { htmlAttributes = new { @class = "form-control ", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StudentPassword, new { htmlAttributes = new { @class = "form-control", @id = "readonly-password", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.StudentPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", @id = "readonly-name", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DoB, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DoB, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD-MM-YYYY", @id = "readonly-dob", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.DoB, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "readonly-mail", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @id = "readonly-mobile", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "readonly-address", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Branch, new { htmlAttributes = new { @class = "form-control", @id = "readonly-branch", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Cgpa, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cgpa, new { htmlAttributes = new { @class = "form-control", @id = "readonly-cgpa", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Cgpa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control", @id = "readonly-percentage", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Backlogs, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Backlogs, new { htmlAttributes = new { @class = "form-control", @id = "readonly-backlogs", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                            @Html.ValidationMessageFor(model => model.Backlogs, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.IsFessPaid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">

                                @Html.CheckBoxFor(m => m.IsFessPaid, new { @id = "readonly-fees", @readonly = "readonly", @ondblclick = "enable(this.id)" })
                                @Html.ValidationMessageFor(model => model.IsFessPaid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.IsPlaced, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">


                                @Html.CheckBoxFor(m => m.IsPlaced, new { @onclick = "displayfields()", @readonly = "readonly", @ondblclick = "enable(this.id)" })
                                @Html.ValidationMessageFor(model => model.IsPlaced, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @if (Model.IsPlaced)
                {
                        <div class="form-group " id="packages">
                            @Html.LabelFor(model => model.Package, htmlAttributes: new { @class = "control-label  col-md-2" })
                            <div class="col-md-10">

                                @Html.EditorFor(model => model.Package, new { htmlAttributes = new { @class = "form-control", @id = "readonly-package", @readonly = "readonly", @ondblclick = "enable(this.id)" } })

                                @Html.ValidationMessageFor(model => model.Package, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="company">
                            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", @id = "readonly-company", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    @if (!(Model.IsPlaced))
                {
                        <div class="form-group " id="packages" style="display:none">
                            @Html.LabelFor(model => model.Package, htmlAttributes: new { @class = "control-label  col-md-2" })
                            <div class="col-md-10">

                                @Html.EditorFor(model => model.Package, new { htmlAttributes = new { @class = "form-control", @id = "readonly-package", @readonly = "readonly", @ondblclick = "enable(this.id)" } })

                                @Html.ValidationMessageFor(model => model.Package, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="company" style="display:none">
                            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", @id = "readonly-company", @readonly = "readonly", @ondblclick = "enable(this.id)" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <center><input type="submit" id="submit-btn" value="Request Changes" class="btn btn-danger " style="display:none" /></center>
                    </div>
                </div>

            </div>

        </div>
    }

</body>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")